apiVersion: v1
kind: Namespace
metadata:
  name: postresql
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: postresql
  labels:
    app: postgres
data:
  POSTGRES_DB: ******
  POSTGRES_USER: ******
  POSTGRES_PASSWORD: ******
  PGDATA: /var/lib/postgresql/data/pgdata
  
  postgresql.conf: |
    hot_standby = on
    restore_command = 'pg_standby -c /path/to/recovery.conf %f %p %r'
  pg_hba.conf: |
    host replication replication 176.88.224.24//32 md5
    hot all replication 176.88.224.24 md5
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv-products-volume  # Sets PV's name
  namespace: postresql
  labels:
    type: local  # Sets PV's type to local
    app: postgres
spec:
  storageClassName: local-storage
  capacity:
    storage: 50Gi # Sets PV Volume
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/volume"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: postresql
  name: postgres-pv-products-claim  # Sets name of PVC
  labels:
    app: postgres
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteMany  # Sets read and write access
  resources:
    requests:
      storage: 50Gi  # Sets volume size
  volumeName:  postgres-pv-products-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-master
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app: postgres-master
  template:
    metadata:
      labels:
        app: postgres-master
    spec:
      initContainers:
        - name: set-permissions
          image: busybox
          command: ["sh", "-c", "chmod 777 -R /bitnami/postgresql"]
          volumeMounts:
            - name: postgres-data
              mountPath: /bitnami/postgresql
      containers:
      - name: postgres-master
        image: bitnami/postgresql:15
        env:
          - name: POSTGRESQL_REPLICATION_MODE
            value: master
          - name: POSTGRESQL_REPLICATION_USER
            value: ******
          - name: POSTGRESQL_REPLICATION_PASSWORD
            value: ******
          - name: POSTGRESQL_PASSWORD
            value: ******
          - name: POSTGRESQL_EXTRA_FLAGS
            value: "-c work_mem=2GB -c shared_buffers=1GB"
          - name: POSTGRESQL_MAX_CONNECTIONS
            value: '300'
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-data
          mountPath: /bitnami/postgresql
      nodeSelector:
        kubernetes.io/hostname: slave-2
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: database-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-slave
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app: postgres-slave
  template:
    metadata:
      labels:
        app: postgres-slave
    spec:
      initContainers:
        - name: set-permissions
          image: busybox
          command: ["sh", "-c", "chmod 777 -R /bitnami/postgresql"]
          volumeMounts:
            - name: postgres-data
              mountPath: /bitnami/postgresql
      containers:
      - name: postgres-slave
        image: bitnami/postgresql:15
        env:
          - name: POSTGRESQL_REPLICATION_MODE
            value: slave
          - name: POSTGRESQL_REPLICATION_USER
            value: ******
          - name: POSTGRESQL_REPLICATION_PASSWORD
            value: ******
          - name: POSTGRESQL_PASSWORD
            value: ******
          - name: POSTGRESQL_MASTER_HOST
            value: "******"
          - name: POSTGRESQL_MASTER_PORT_NUMBER
            value: "5432"
          - name: POSTGRESQL_EXTRA_FLAGS
            value: "-c work_mem=2GB -c shared_buffers=1GB"
          - name: POSTGRESQL_MAX_CONNECTIONS
            value: '300'
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-data
          mountPath: /bitnami/postgresql
      nodeSelector:
        kubernetes.io/hostname: slave-1
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: database-slave-claim
---
kind: Service
apiVersion: v1
metadata:
  name: postresql
  namespace: test
  labels:
    app: postresql
spec:
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  selector:
    app: postgres
  type: ClusterIP